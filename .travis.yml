language: go

env:
  global:
  - GO111MODULE=on DOCKER_USERNAME=summercashbot

services:
  - docker

notifications:
  email: false

install:
  - go get mvdan.cc/gofumpt; cd ~/go/src/mvdan.cc/gofumpt; go install; cd
  - export GO111MODULE=on
  - go get -u

install: true

jobs:
  include:
    - stage: validate
      name: "lint"
      script:
        - chmod +x ./scripts/validate_lint.sh # Make validate lint executable
        - ./scripts/validate_lint.sh # Validate lint
    - name: "vet"
      script:
        - go vet ./... # Run static analyzer
    - name: "gofmt"
      script:
        - git diff --quiet || (echo "\033[0;31mWorking directory not clean!\033[0m" && exit 1) # Check working dir clean
        - gofumpt -w -s . # Fmt
        - git diff --exit-code || (git checkout . && exit 1) # Ensure no changes made in working dir
    - name: "tidy"
      script:
        - git diff --quiet || (echo "\033[0;31mWorking directory not clean!\033[0m" && exit 1) # Check working dir clean
        - go mod tidy # Tidy
        - git diff --exit-code || (git checkout . && exit 1) # Exit if not tidied
    - stage: test
      name: "test"
      script:
        - go run main.go & # Start node
        - chmod +x ./test.sh && ./test.sh # Run unit tests
    - stage: deploy
      name: "push to dockerHub"
      script:
        - chmod +x scripts/push_docker.sh # Make executable
        - ./scripts/push_docker.sh $DOCKER_USERNAME $DOCKER_PASSWORD # Push

after_success:
  - bash <(curl -s https://codecov.io/bash)